# üìÅ backend/app/core/pipeline.py

from core.serper import search_companies
from core.deepseek import find_contacts_for_site
from db.supabase import save_company_with_score, save_contacts_for_company, supabase
from typing import List

def company_exists(url: str) -> bool:
    try:
        response = supabase.table("companies").select("url").eq("url", url).execute()
        return len(response.data) > 0
    except Exception as e:
        print("Error checking company existence:", e)
        return False

def process_query(query: str):
    print(f"üîç Processing query: {query}")
    companies: List[dict] = search_companies(query)

    for company in companies:
        url = company.get("url")
        if not url:
            print("‚õî –ü—Ä–æ–ø—É—â–µ–Ω–∞ –∫–æ–º–ø–∞–Ω–∏—è –±–µ–∑ URL")
            continue

        if company_exists(url):
            print(f"‚ö†Ô∏è –ö–æ–º–ø–∞–Ω–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ: {url}")
            continue

        print(f"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–ø–∞–Ω–∏—é: {company.get('name')}")
        save_company_with_score({
            "name": company.get("title"),
            "url": url,
            "description": company.get("snippet"),
            "ai_score": None  # –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º
        })

        print(f"üß† –ò—â–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã —á–µ—Ä–µ–∑ DeepSeek –¥–ª—è {url}...")
        contacts = find_contacts_for_site(url)
        if contacts:
            save_contacts_for_company(url, contacts)
        else:
            print("üôà –ö–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
